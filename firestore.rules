
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read any profile, but only write to their own.
    // This allows for features like user search and feeds.
    // The `isOwner` check correctly handles both creating a new document (onboarding)
    // and updating an existing one.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);
    }
    
    // Allow users to read any workout, but only create, update, or delete their own.
    match /workouts/{workoutId} {
      allow read: if request.auth != null;
      // For create, check the incoming data's userId.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // For update/delete, check the existing data's userId.
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Secure all user-specific subcollections. Only the owner can access them.
    match /users/{userId}/{subcollection}/{docId} {
        allow read, write, create, delete: if isOwner(userId);
    }
  }
}
