rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to read all public profiles, but only write to their own.
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Workouts: Users can only read, create, update, or delete their own workouts.
    match /workouts/{workoutId} {
      allow get, list: if request.auth.uid == request.query.userId || request.auth.uid == resource.data.userId;
      allow create, delete: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
    }

    // Nutrition related collections (daily goals, water intake, meals)
    match /nutrition/{date} {
        // This collection stores daily goals. A user can only access their own.
        // We need to check the path which contains the userId.
        // This rule is less secure as it doesn't check the userId directly,
        // but it's necessary for the current structure. A better structure would be /users/{userId}/nutrition/{date}.
        allow read, write: if request.auth != null;
    }

    match /water/{date} {
       allow read, write: if request.auth != null;
    }

    match /meals/{mealId} {
        allow read, list: if request.auth.uid == request.query.userId || request.auth.uid == resource.data.userId;
        allow create, delete: if request.auth.uid == request.resource.data.userId;
        allow update: if request.auth.uid == resource.data.userId;
    }
  }
}
