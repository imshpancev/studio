rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read anyone's profile, but only write to their own.
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can get/delete their own workouts.
    // They can LIST workouts only if the query is filtered by their own userId.
    // They can create/update their own workouts.
    match /workouts/{workoutId} {
      allow get, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null && request.query.where('userId', '==', request.auth.uid);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // For user-specific subcollections, access is granted if the user is authenticated
    // and their UID matches the {userId} in the path.
    match /users/{userId}/nutrition/{date} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /users/{userId}/meals/{mealId} {
      // Get/write for single documents, list for queries on the collection
      allow get, write: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId}/water/{date} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
