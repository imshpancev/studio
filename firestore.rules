
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read and update their own profile.
    // They can list all users for searching friends.
    match /users/{userId} {
      allow get: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    // Users can only manage their own workouts.
    match /workouts/{workoutId} {
      allow get, delete, update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null && request.query.where.size() > 0 && request.query.where[0].field == 'userId' && request.query.where[0].value == request.auth.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Users can only manage their own meals.
    match /meals/{mealId} {
      allow get, delete, update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null && request.query.where.size() > 0 && request.query.where[0].field == 'userId' && request.query.where[0].value == request.auth.uid;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can only manage their own daily nutrition goals.
    match /users/{userId}/nutrition/{date} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can only manage their own daily water intake.
     match /users/{userId}/water/{date} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
