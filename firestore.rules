rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Any authenticated user can view public profiles
      allow get: if request.auth != null;
      // Users can only write to their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
      // Allow listing users for search functionality
      allow list: if request.auth != null;
    }

    match /workouts/{workoutId} {
      // Any authenticated user can get a specific workout if they have the ID.
      // The UI will only show workouts belonging to the user.
      allow get: if request.auth != null;
      // Users can only delete their own workouts.
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
      // Users can only list their own workouts. The client MUST use a where() clause.
      allow list: if request.auth != null && request.query.where('userId', '==', request.auth.uid);
      // Users can only create workouts for themselves.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Users can only update their own workouts.
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Nutrition data is private to the user
    match /users/{userId}/nutrition/{date} {
      allow get, list, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Meal data is private to the user
    match /users/{userId}/meals/{mealId} {
      allow get, list, write: if request.auth != null && request.auth.uid == userId;
    }

    // Water data is private to the user
    match /users/{userId}/water/{date} {
      allow get, list, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}